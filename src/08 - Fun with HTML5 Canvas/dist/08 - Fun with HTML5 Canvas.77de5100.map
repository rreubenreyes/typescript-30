{"version":3,"sources":["index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA;AACA,IAAM,MAAM,GAAsB,QAAQ,CAAC,aAAT,CAAuB,OAAvB,CAAlC;AACA,IAAM,GAAG,GAA6B,MAAM,CAAC,UAAP,CAAkB,IAAlB,CAAtC;AACA,IAAM,KAAK,GAAuB;AAChC,EAAA,SAAS,EAAE,KADqB;AAEhC,EAAA,KAAK,EAAE,CAFyB;AAGhC,EAAA,KAAK,EAAE;AAHyB,CAAlC;AAMA;;AACA,MAAM,CAAC,KAAP,GAAe,MAAM,CAAC,UAAtB;AACA,MAAM,CAAC,MAAP,GAAgB,MAAM,CAAC,WAAvB;AAEA;;AACA,GAAG,CAAC,WAAJ,GAAkB,SAAlB,EAA4B;;AAC5B,GAAG,CAAC,OAAJ,GAAc,OAAd,EAAsB;;AACtB,GAAG,CAAC,QAAJ,GAAe,OAAf,EAAuB;;AACvB,GAAG,CAAC,SAAJ,GAAgB,EAAhB;AAEA;;AACA,SAAS,IAAT,CAAc,EAAd,EAA8C;MAA9B,OAAA,GAAA,EAAA,CAAA;MAAS,OAAA,GAAA,EAAA,CAAA;;;;AACf,MAAA,SAAA,GAAA,KAAA,CAAA,SAAA;AAAA,MAAW,KAAA,GAAA,KAAA,CAAA,KAAX;AAAA,MAAkB,KAAA,GAAA,KAAA,CAAA,KAAlB;AACR;;AACA,MAAI,CAAC,SAAL,EAAgB;AACd;AACD;AAED;;;AACA,EAAA,GAAG,CAAC,SAAJ,GAR4C,CAQ5B;;AAChB,EAAA,GAAG,CAAC,MAAJ,CAAW,KAAX,EAAkB,KAAlB,EAT4C,CASnB;;AACzB,EAAA,GAAG,CAAC,MAAJ,CAAW,OAAX,EAAoB,OAApB;AAEA;;AACA,EAAA,GAAG,CAAC,MAAJ;AACC,EAAA,EAAA,GAAA,CAAA,OAAA,EAAA,OAAA,CAAA,EAAC,KAAA,CAAA,KAAA,GAAA,EAAA,CAAA,CAAA,CAAD,EAAc,KAAA,CAAA,KAAA,GAAA,EAAA,CAAA,CAAA,CAAd,CAd2C,CAcK;AAClD;AAED;;;AACA,SAAS,eAAT,CAAyB,EAAzB,EAAyD;MAA9B,OAAA,GAAA,EAAA,CAAA;MAAS,OAAA,GAAA,EAAA,CAAA;;;;AAClC,EAAA,KAAK,CAAC,SAAN,GAAkB,IAAlB;AACC,EAAA,EAAA,GAAA,CAAA,OAAA,EAAA,OAAA,CAAA,EAAC,KAAA,CAAA,KAAA,GAAA,EAAA,CAAA,CAAA,CAAD,EAAc,KAAA,CAAA,KAAA,GAAA,EAAA,CAAA,CAAA,CAAd;AACF;AAED;;;AACA,MAAM,CAAC,gBAAP,CAAwB,WAAxB,EAAqC,IAArC;AACA,MAAM,CAAC,gBAAP,CAAwB,WAAxB,EAAqC,eAArC;AACA,MAAM,CAAC,gBAAP,CACE,SADF,EAEE,YAAA;AACE,EAAA,KAAK,CAAC,SAAN,GAAkB,KAAlB;AACD,CAJH","file":"08 - Fun with HTML5 Canvas.77de5100.map","sourceRoot":"..","sourcesContent":["interface CanvasDrawingState {\n  isDrawing: boolean\n  lastX: number\n  lastY: number\n}\n\n/* initialize canvas */\nconst canvas: HTMLCanvasElement = document.querySelector(`#draw`)\nconst ctx: CanvasRenderingContext2D = canvas.getContext(`2d`)\nconst state: CanvasDrawingState = {\n  isDrawing: false,\n  lastX: 0,\n  lastY: 0\n}\n\n/* set canvas bounding rect */\ncanvas.width = window.innerWidth\ncanvas.height = window.innerHeight\n\n/* set RenderingContext drawing properties */\nctx.strokeStyle = `#fc4675` // color\nctx.lineCap = `round` // line ending shape\nctx.lineJoin = `round` // when a line changes direction, a joining area must be rendered\nctx.lineWidth = 10\n\n/* canvas behavior */\nfunction draw({ offsetX, offsetY }: MouseEvent): void {\n  const { isDrawing, lastX, lastY } = state\n  /* if not moused down, don't do anything */\n  if (!isDrawing) {\n    return\n  }\n\n  /* calculate line properties */\n  ctx.beginPath() // start a new line\n  ctx.moveTo(lastX, lastY) // line origin\n  ctx.lineTo(offsetX, offsetY)\n\n  /* actually draw */\n  ctx.stroke()\n  ;[state.lastX, state.lastY] = [offsetX, offsetY] // line endpoint\n}\n\n/* handlers */\nfunction handleMouseDown({ offsetX, offsetY }: MouseEvent): void {\n  state.isDrawing = true\n  ;[state.lastX, state.lastY] = [offsetX, offsetY]\n}\n\n/* listeners */\ncanvas.addEventListener('mousemove', draw)\ncanvas.addEventListener('mousedown', handleMouseDown)\ncanvas.addEventListener(\n  'mouseup',\n  (): void => {\n    state.isDrawing = false\n  }\n)\n"]}