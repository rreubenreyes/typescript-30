{"version":3,"sources":["index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA;AACA,IAAM,QAAQ,GAAoB,QAAQ,CAAC,aAAT,CAAuB,YAAvB,CAAlC;AACA,IAAM,SAAS,GAAqB,QAAQ,CAAC,aAAT,CAAuB,SAAvB,CAApC;AAEA;;AACA,IAAM,KAAK,GAAe,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,OAAb,CAAqB,OAArB,CAAX,CAA1B;AAEA;;AACA,SAAS,YAAT,CAA6C,CAA7C,EAAqD;AAC3C,MAAA,IAAA,GAAA,KAAA,IAAA;AACR,EAAA,CAAC,CAAC,cAAF;AACA,EAAA,KAAK,CAAC,IAAN,CAAW;AACT,IAAA,OAAO,EAAE,KADA;AAET,IAAA,KAAK,EAAE,IAAI,CAAC;AAFH,GAAX;AAKA,EAAA,YAAY,CAAC,OAAb,CAAqB,OAArB,EAA8B,IAAI,CAAC,SAAL,CAAe,KAAf,CAA9B,EARmD,CAQE;;AACrD,EAAA,iBAAiB;AAClB;;AAED,IAAM,iBAAiB,GAAG,SAApB,iBAAoB,GAAA;AACxB,EAAA,SAAS,CAAC,SAAV,GAAsB,KAAK,CACxB,GADmB,CAElB,UAAC,EAAD,EAA+B,GAA/B,EAA0C;QAAvC,OAAA,GAAA,EAAA,CAAA;QAAS,KAAA,GAAA,EAAA,CAAA;AACV,WAAO,6DAE4B,GAF5B,GAE+B,cAF/B,GAE4C,GAF5C,GAE+C,gCAF/C,GAGS,GAHT,GAGY,KAHZ,GAGiB,KAHjB,GAGsB,6BAH7B;AAMD,GATiB,EAWnB,IAXmB,CAWd,IAXc,CAAtB;AAYD,CAbD;AAeA;;;AACA,QAAQ,CAAC,gBAAT,CAA0B,QAA1B,EAAoC,YAApC;AAEA;;AACA;;AACA,IAAI,CAAC,YAAY,CAAC,OAAb,CAAqB,OAArB,CAAL,EAAoC;AAClC,EAAA,YAAY,CAAC,OAAb,CAAqB,OAArB,EAA8B,IAA9B;AACD;;AACD,iBAAiB","file":"15 - LocalStorage.77de5100.map","sourceRoot":"..","sourcesContent":["interface MenuItem {\n  value: string\n  checked: boolean\n}\n\n/* elements */\nconst addItems: HTMLFormElement = document.querySelector('.add-items')\nconst itemsList: HTMLUListElement = document.querySelector('.plates')\n\n/* initialize an array variable to be equivalent to localStorage */\nconst items: MenuItem[] = JSON.parse(localStorage.getItem('items'))\n\n/* handlers */\nfunction handleSubmit(this: HTMLFormElement, e: Event): void {\n  const { item } = this\n  e.preventDefault()\n  items.push({\n    checked: false,\n    value: item.value\n  })\n\n  localStorage.setItem('items', JSON.stringify(items)) // sync with localStorage\n  populateItemsList()\n}\n\nconst populateItemsList = (): void => {\n  itemsList.innerHTML = items\n    .map(\n      ({ checked, value }: MenuItem, key: number): string => {\n        return `\n    <li>\n      <input type=\"checkbox\" data-index=\"${key}\" id=\"item${key}\" />\n      <label for=\"item${key}\">${value}</label>\n    </li>\n      `\n      }\n    )\n    .join('\\n')\n}\n\n/* listeners */\naddItems.addEventListener('submit', handleSubmit)\n\n/* main */\n/* initialize localStorage if it is empty */\nif (!localStorage.getItem('items')) {\n  localStorage.setItem('items', '[]')\n}\npopulateItemsList()\n"]}