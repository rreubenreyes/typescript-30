{"version":3,"sources":["index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWA,IAAM,MAAM,GAAG,CACb;AAAE,EAAA,IAAI,EAAE,KAAR;AAAe,EAAA,IAAI,EAAE;AAArB,CADa,EAEb;AAAE,EAAA,IAAI,EAAE,MAAR;AAAgB,EAAA,IAAI,EAAE;AAAtB,CAFa,EAGb;AAAE,EAAA,IAAI,EAAE,KAAR;AAAe,EAAA,IAAI,EAAE;AAArB,CAHa,EAIb;AAAE,EAAA,IAAI,EAAE,KAAR;AAAe,EAAA,IAAI,EAAE;AAArB,CAJa,CAAf;AAOA,IAAM,QAAQ,GAAG,CACf;AAAE,EAAA,IAAI,EAAE,YAAR;AAAsB,EAAA,EAAE,EAAE;AAA1B,CADe,EAEf;AAAE,EAAA,IAAI,EAAE,YAAR;AAAsB,EAAA,EAAE,EAAE;AAA1B,CAFe,EAGf;AAAE,EAAA,IAAI,EAAE,kBAAR;AAA4B,EAAA,EAAE,EAAE;AAAhC,CAHe,EAIf;AAAE,EAAA,IAAI,EAAE,2BAAR;AAAqC,EAAA,EAAE,EAAE;AAAzC,CAJe,EAKf;AAAE,EAAA,IAAI,EAAE,iBAAR;AAA2B,EAAA,EAAE,EAAE;AAA/B,CALe,CAAjB,EAQA;AACA;;AACA,IAAM,MAAM,GAAY,MAAM,CAAC,IAAP,CAAY,UAAC,EAAD,EAAiB;MAAd,IAAA,GAAA,EAAA,CAAA;AAAmB,SAAA,IAAI,GAAG,OAAO,EAAd;AAAgB,CAAlD,CAAxB;AACA,OAAO,CAAC,GAAR,CACE,kEADF,EAEE,MAFF,GAIA;;AACA,IAAM,OAAO,GAAY,MAAM,CAAC,KAAP,CAAa,UAAC,EAAD,EAAiB;MAAd,IAAA,GAAA,EAAA,CAAA;AAAmB,SAAA,IAAI,GAAG,OAAO,EAAd;AAAgB,CAAnD,CAAzB;AACA,OAAO,CAAC,GAAR,CAAY,wDAAZ,EAAsE,OAAtE,GAEA;AACA;AACA;;AACA,IAAM,aAAa,GAAgB,QAAQ,CAAC,IAAT,CACjC,UAAC,EAAD,EAAoB;MAAjB,EAAA,GAAA,EAAA,CAAA;AAAsB,SAAA,EAAE,KAAK,MAAP;AAAa,CADL,CAAnC;AAGA,OAAO,CAAC,GAAR,CAAY,oCAAZ,EAAkD,aAAlD,GAEA;AACA;AACA;;AACA,IAAM,sBAAsB,GAAW,QAAQ,CAAC,SAAT,CACrC,UAAC,EAAD,EAAoB;MAAjB,EAAA,GAAA,EAAA,CAAA;AAAsB,SAAA,EAAE,KAAK,MAAP;AAAa,CADD,CAAvC;AAGA,QAAQ,CAAC,MAAT,CAAgB,sBAAhB,EAAwC,CAAxC;AACA,OAAO,CAAC,GAAR,CAAY,sCAAZ,EAAoD,QAApD","file":"07 - Array Cardio Day 2.77de5100.map","sourceRoot":"..","sourcesContent":["// ## Array Cardio Day 2\ninterface Person {\n  name: string\n  year: number\n}\n\ninterface UserComment {\n  text: string\n  id: number\n}\n\nconst people = [\n  { name: 'Wes', year: 1988 },\n  { name: 'Kait', year: 1986 },\n  { name: 'Irv', year: 1970 },\n  { name: 'Lux', year: 2015 }\n]\n\nconst comments = [\n  { text: 'Love this!', id: 523423 },\n  { text: 'Super good', id: 823423 },\n  { text: 'You are the best', id: 2039842 },\n  { text: 'Ramen is my fav food ever', id: 123523 },\n  { text: 'Nice Nice Nice!', id: 542328 }\n]\n\n// Some and Every Checks\n// Array.prototype.some() // is at least one person 19 or older?\nconst some19: boolean = people.some(({ year }: Person) => year > 2019 - 19)\nconsole.log(\n  `1) Array.prototype.some() // is at least one person 19 or older?`,\n  some19\n)\n// Array.prototype.every() // is everyone 19 or older?\nconst every19: boolean = people.every(({ year }: Person) => year > 2019 - 19)\nconsole.log(`2) Array.prototype.every() // is everyone 19 or older?`, every19)\n\n// Array.prototype.find()\n// Find is like filter, but instead returns just the one you are looking for\n// find the comment with the ID of 823423\nconst commentWithId: UserComment = comments.find(\n  ({ id }: UserComment) => id === 823423\n)\nconsole.log(`3) Find the comment with id 823423`, commentWithId)\n\n// Array.prototype.findIndex()\n// Find the comment with this ID\n// delete the comment with the ID of 823423\nconst deleteCommentWithIndex: number = comments.findIndex(\n  ({ id }: UserComment) => id === 823423\n)\ncomments.splice(deleteCommentWithIndex, 1)\nconsole.log(`4) Delete the comment with id 823423`, comments)\n"]}